---
alwaysApply: true

### 1. **ディレクトリ構造の基本方針**
- **責務の分離**: DDDを採用

### 2. **ディレクトリ構成の詳細**

#### 2.1. **機能ディレクトリ**

- **`app`**:
  - **`Application`**: アプリケーション層
    - **`Services`**: ユースケース実装
  - **`Domain`**: ドメイン層（ビジネスロジックの中心）
    - **`*`**: ドメイン名
    - **`Entities`**: エンティティ（ビジネスの主要オブジェクト）
    - **`ValueObjects`**: 値オブジェクト（シンプルな値の表現）
    - **`Repositories`**: データ取得用インターフェース
    - **`Services`**: ドメイン固有のロジック
  - **`Http`**: プレゼンテーション層
    - **`Controllers`**: HTTPリクエスト処理
    - **`Requests`**: 入力検証
  - **`Infrastructure`**: インフラストラクチャ層
    - **`Repositories`**: データアクセス実装
  - **`Model`**: Eloquentモデル（シンプルなDBマッピング）
    - **`Repositories`**: データアクセス実装

### 3. **コード品質**

- **インデント及び改行が整理できているか**: 不要な改行や不適切なインデントが存在しないこと:
- **htmlのタグ構造が適当か**: 見出しタグがh1から順番に階層構造になっているか:
- **htmlファイルにおいて適切なタグ構成になっているか**: divタグの乱用、liやtable等要素に合わせたタグ当て等ができているか:
- **id名**: ローマ字など英単語でないものが使われていないか、意味の伝わる命名になっているか:
- **class名**: ローマ字など英単語でないものが使われていないか、意味の伝わる命名になっているか:
- **変数名**: 意味のない命名をしない、ローマ字などの英単語ではないもので命名をしない: 
- **モデル名**: アッパーキャメル: 
- **コントローラ名**: アッパーキャメル:
- **フォームリクエスト名**: アッパーキャメル:
- **マイグレーションファイル名**: スネークケース:
- **コシーディングファイル名**: アッパーキャメル:
- **クラスやファイルの読み込みは必要十分か**: 使用していないクラスやファイルをuseで読み込んでいないか:

---
